<!--
/*
 * polycasso - Cubism Artwork generator
 * Copyright 2009-2013 MeBigFatGuy.com
 * Copyright 2009-2013 Dave Brosius
 * Inspired by work by Roger Alsing
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); 
 * you may not use this file except in compliance with the License. 
 * You may obtain a copy of the License at 
 * 
 *    http://www.apache.org/licenses/LICENSE-2.0 
 *    
 * Unless required by applicable law or agreed to in writing, 
 * software distributed under the License is distributed on an "AS IS" BASIS, 
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 * See the License for the specific language governing permissions and limitations 
 * under the License. 
 */
 -->

<project name="polycasso" default="jar">
	
	<property file="build.properties"/>
	
	<property name="src.dir" value="${basedir}/src"/>
	<property name="classes.dir" value="${basedir}/classes"/>
	<property name="lib.dir" value="${basedir}/lib"/>
	<property name="etc.dir" value="${basedir}/etc"/>
	<property name="htdocs.dir" value="${basedir}/htdocs"/>
	<property name="jnlp.dir" value="${htdocs.dir}/jnlp"/>
	<property name="javadoc.dir" value="${htdocs.dir}/javadoc"/>
	<property name="javac.source" value="1.6"/>
	<property name="javac.target" value="1.6"/>
	<property name="javac.deprecation" value="on"/>
	<property name="javac.debug" value="on"/>
	
	<property name="forms.version" value="1.2.1"/>
	<property name="commons-io.version" value="2.4"/> 
	<property name="junit.version" value="4.11"/>
	
	<property name="polycasso.version" value="1.6.0"/>
	
	<target name="clean" description="removes all generated collateral">
		<delete dir="${classes.dir}"/>
		<delete dir="${javadoc.dir}"/>
		<delete>
			<fileset dir="${jnlp.dir}">
				<include name="polycasso*.jar"/>
				<include name="*.jnlp"/>
			</fileset>
		</delete>
		<delete>
    		<fileset dir="${basedir}" includes="*.zip"/>
  		</delete>
	</target>
	
	<target name="-init" description="prepares repository for a build">
		<mkdir dir="${lib.dir}"/>
		<mkdir dir="${classes.dir}"/>
		<mkdir dir="${javadoc.dir}"/>
		<path id="polycasso.classpath">
			<pathelement location="${lib.dir}/commons-io-${commons-io.version}.jar"/>
			<pathelement location="${lib.dir}/forms-${forms.version}.jar"/>
		</path>
	</target>


	<property name="forms_url" value="http://repo1.maven.org/maven2/com/jgoodies/forms/${forms.version}/forms-${forms.version}.jar"/> 
    <property name="commonsio_url" value="http://repo1.maven.org/maven2/commons-io/commons-io/${commons-io.version}/commons-io-${commons-io.version}.jar"/> 
    <property name="junit_url" value="http://repo1.maven.org/maven2/junit/junit/${junit.version}/junit-${junit.version}.jar"/> 
	
    <target name="forms_check">
        <available file="${basedir}/lib/forms-${forms.version}.jar" property="forms_exists"/>
    </target>

    <target name="commonsio_check">
        <available file="${basedir}/lib/commons-io-${commons-io.version}.jar" property="commonsio.exists"/>
    </target>
	
    <target name="junit_check">
        <available file="${basedir}/lib/junit-${junit.version}.jar" property="junit.exists"/>
    </target>

    <target name="install_forms" depends="forms_check" unless="forms_exists" description="installs forms.jar into lib">
        <get src="${forms_url}" dest="${lib.dir}/forms-${forms.version}.jar" verbose="true" ignoreerrors="true"/>
    </target>

    <target name="install_commonsio" depends="commonsio_check" unless="commonsio.exists" description="installs commons-io.jar into lib">
        <get src="${commonsio_url}" dest="${lib.dir}/commons-io-${commons-io.version}.jar" verbose="true" ignoreerrors="true"/>
    </target>
	
    <target name="install_junit" depends="junit_check" unless="junit.exists" description="installs junit.jar into lib">
        <get src="${junit_url}" dest="${lib.dir}/junit-${junit.version}.jar" verbose="true" ignoreerrors="true"/>
    </target>
	
    <target name="pull" depends="install_forms, install_commonsio, install_junit" description="pulls in the 3rd party jars">
    </target>
		
	<target name="compile" depends="-init, pull" description="compiles java files">
		<javac srcdir="${src.dir}"
				destdir="${classes.dir}"
				source="${javac.source}"
				target="${javac.target}"
				deprecation="${javac.deprecation}"
				debug="${javac.debug}"
				includeantruntime="false">
			<classpath refid="polycasso.classpath"/>
		</javac>
	</target>
	
	<target name="resources" depends="-init" description="copies required files">
		<copy todir="${classes.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.properties"/>
				<include name="**/*.template"/>
			</fileset>
		</copy>
		<echo message="${polycasso.version}" file="${classes.dir}/com/mebigfatguy/polycasso/Version.txt"/>
		<copy todir="${jnlp.dir}">
			<fileset dir="${etc.dir}">
				<include name="*.jnlp"/>
			</fileset>
		</copy>
		<replaceregexp byline="true">
  			<regexp pattern="\$VERSION"/>
  			<substitution expression="${polycasso.version}"/>
  			<fileset dir="${jnlp.dir}">
   				<include name="*.jnlp"/>
  			</fileset>
 		</replaceregexp>
	</target>
	
	<target name="jar" depends="compile, resources" description="produces the polycasso jar file">
		<jar destfile="${jnlp.dir}/polycasso-${polycasso.version}.jar">
			<fileset dir="${classes.dir}">
				<include name="**/*.class"/>
				<include name="**/*.properties"/>
				<include name="**/*.txt"/>
				<include name="**/*.template"/>
			</fileset>
			<fileset dir="${basedir}">
				<include name="license.txt"/>
			</fileset>
			<manifest>
				<attribute name="polycasso-version" value="${polycasso.version}"/>
				<attribute name="Main-Class" value="com.mebigfatguy.polycasso.Polycasso"/>
                <attribute name="Application-Name" value="Polycasso" />
                <attribute name="Permissions" value="all-permissions" />
                <attribute name="Codebase" value="*" />
				<attribute name="Class-Path" value="commons-io-${commons-io.version}.jar forms-${forms.version}.jar"/>
			</manifest>
		</jar>	
	</target>
	
	<target name="srczip" description="builds the source distribution zip file">
		<zip destfile="${basedir}/polycasso-src-${polycasso.version}.zip" 
			 basedir="${basedir}"
			 includes="src/**/*.java, src/**/*.properties, lib/**/*.jar, *.txt"/>
	</target>
	
	<target name="javadoc" depends="-init" description="build the javadoc for the project">
		<javadoc packagenames="com.mebigfatguy.*"
				 sourcepath="${src.dir}"
				 classpathref="polycasso.classpath"
				 destdir="${javadoc.dir}"
				 windowtitle="polycasso api">
		    <doctitle><![CDATA[<h1>polycasso javadoc</h1>]]></doctitle>
		    <bottom><![CDATA[<i>Copyright &#169; 2009-2010 MeBigFatGuy.com. All Rights Reserved.</i>]]></bottom>
		</javadoc>
	</target>
	
	<target name="test" depends="-init, compile, resources" description="runs unit tests">
		<path id="polycassotest.classpath">
			<pathelement location="${classes.dir}"/>
	        <pathelement location="${lib.dir}/junit-${junit.version}.jar"/>
		</path>
        <junit
            printsummary="true"
            haltonfailure="true"
            haltonerror="true"
            showoutput="true"
            fork="true">

            <classpath><path refid="polycassotest.classpath"/></classpath>
            <batchtest fork="true">
                <fileset dir="${classes.dir}"
                	excludes="test/*$*"
                    includes="test/*"/>
            </batchtest>
        </junit>
	</target>
	
	<target name="build" depends="clean, -init, compile, resources, test, jar" description="builds the polycasso jar"/>
	
	<target name="jnlp" description="copy jars to jnlp directory">
		<copy todir="${jnlp.dir}">
			<fileset dir="${lib.dir}">
				<include name="*.jar"/>
			</fileset>
			<fileset dir="${basedir}">
				<include name="*.jar"/>
			</fileset>
		</copy>
		<input message="Enter keystore password" addproperty="pass"/>
		<signjar keystore="polycasso.store" 
		         alias="polycasso"
		         keypass="${pass}"
		         storepass="${pass}">
		    <fileset dir="${jnlp.dir}">
				<include name="*.jar"/>
			</fileset>
		</signjar>
	</target>
	
	<target name="binzip" depends="build" description="zips up all jars">
		<zip destfile="${basedir}/polycasso-bin-${polycasso.version}.zip" 
			 basedir="${jnlp.dir}"
			 includes="polycasso-${polycasso.version}.jar commons-io-${commons-io.version}.jar forms-${forms.version}.jar"/>
	</target>
	
	<target name="release" depends="build, jnlp, binzip, srczip, javadoc" description="prepares everything for a release"/>

</project>
